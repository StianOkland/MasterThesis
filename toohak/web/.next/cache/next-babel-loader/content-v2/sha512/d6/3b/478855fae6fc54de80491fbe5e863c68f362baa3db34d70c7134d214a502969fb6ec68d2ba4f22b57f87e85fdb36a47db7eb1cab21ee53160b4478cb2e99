{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ablab/Desktop/toohak/testweb/pages/index.js\";\nimport Automerge from 'automerge';\nimport Head from 'next/head';\nimport io from 'socket.io-client';\nimport { useState } from 'react';\nconst docSet = new Automerge.DocSet();\ndocSet.registerHandler((docId, doc) => {\n  console.log(`[${docId}] ${JSON.stringify(doc)}`);\n});\nconst socket = io(\"http://localhost:3000\");\nsocket.on('data', ({\n  data,\n  name\n}) => {\n  let doc = docSet.getDoc(name);\n  doc = Automerge.change(doc, doc => {\n    doc.chards = ['hei'];\n  });\n  docSet.setDoc(name, doc);\n});\nsocket.on('add doc web', ({\n  title,\n  change\n}) => {\n  const initDoc = Automerge.change(Automerge.init(), doc => {\n    doc.title = title, doc.cards = [];\n  });\n  let changes = JSON.parse(change);\n  doc = Automerge.applyChanges(initDoc, changes);\n  docSet.setDoc(title, doc);\n  state.docarray = Array.from(docSet.docs);\n});\nsocket.on('close', () => {\n  console.log(`[${HOST}:${PORT}] connection closed`);\n});\nsocket.on('error', err => {\n  console.log(`[${socket.remoteAddress}:${socket.remotePort}] error: ${err}`);\n});\nsocket.on('add card web', ({\n  name,\n  change\n}) => {\n  const doc = docSet.getDoc(name);\n  let changes = JSON.parse(change);\n  doc2 = Automerge.applyChanges(doc, changes);\n  docSet.setDoc(name, doc2);\n});\nconst data = [{\n  \"name\": \"test1\"\n}, {\n  \"name\": \"test2\"\n}];\n\nconst Index = () => {\n  const {\n    0: results,\n    1: setResults\n  } = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Toohak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Toohak!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"delete_doc\",\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"delete_document\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            setResults(data);\n          },\n          children: \"delete document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: [\"Results: \", JSON.stringify(results, null, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/ablab/Desktop/toohak/testweb/pages/index.js"],"names":["Automerge","Head","io","useState","docSet","DocSet","registerHandler","docId","doc","console","log","JSON","stringify","socket","on","data","name","getDoc","change","chards","setDoc","title","initDoc","init","cards","changes","parse","applyChanges","state","docarray","Array","from","docs","HOST","PORT","err","remoteAddress","remotePort","doc2","Index","results","setResults"],"mappings":"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","sourcesContent":["import Automerge from 'automerge'\nimport Head from 'next/head'\nimport io from 'socket.io-client'\nimport { useState } from 'react'\n\nconst docSet = new Automerge.DocSet()\n\ndocSet.registerHandler((docId, doc) => {\n    console.log(`[${docId}] ${JSON.stringify(doc)}`)\n})\n\n\nconst socket = io(\"http://localhost:3000\")\n\nsocket.on('data', ({data, name}) => {\n    let doc = docSet.getDoc(name)\n    doc = Automerge.change(doc, doc => {\n      doc.chards = ['hei']\n    })\n    docSet.setDoc(name, doc)\n})\n  \nsocket.on('add doc web', ({title, change}) => {\n    const initDoc = Automerge.change(Automerge.init(), doc => {doc.title = title, doc.cards = []})\n    let changes = JSON.parse(change)\n\n    doc = Automerge.applyChanges(initDoc, changes)\n    docSet.setDoc(title, doc)\n    state.docarray = Array.from(docSet.docs)\n})\n\nsocket.on('close', () => {\n    console.log(`[${HOST}:${PORT}] connection closed`)\n})\n\nsocket.on('error', (err) => {\n    console.log(`[${socket.remoteAddress}:${socket.remotePort}] error: ${err}`)\n})\n\nsocket.on('add card web', ({name, change}) => {\n    const doc = docSet.getDoc(name)\n    let changes = JSON.parse(change)\n    doc2 = Automerge.applyChanges(doc, changes)\n    docSet.setDoc(name, doc2)\n})\n\n\nconst data =[{\"name\":\"test1\"},{\"name\":\"test2\"}];\n\n\nconst Index = () => {\n\n    const [results, setResults] = useState()\n\n    return (\n      <>\n        <Head>\n          <title>Toohak</title>\n        </Head>\n        <h1>Toohak!</h1>\n        {/* <p>Make a docset and add documents to collaberate with others.</p>\n        <ul id=\"messages\"></ul>\n        <form id=\"add\" action=\"\">\n            <input id=\"add_document\" autoComplete=\"off\" /><button>add document</button>\n        </form>\n        <form id=\"delete_doc\" action=\"\">\n          <input id=\"delete_document\" autoComplete=\"off\" /><button onClick={async () => {\n            setResults(data)\n          }}>delete document</button>\n        </form>\n        <form id=\"add_card\" action=\"\">\n          <input id=\"docname\" autoComplete=\"off\"/><input id=\"docinput\" autoComplete=\"off\" /><button>Send</button>\n        </form> */}\n\n\n        <div>\n          <form id=\"delete_doc\" action=\"\">\n            <input id=\"delete_document\" autoComplete=\"off\" /><button onClick={async () => {\n              setResults(data)\n            }}>delete document</button>\n          </form>\n          <pre>Results: {JSON.stringify(results, null, 2)}</pre>\n        </div>\n      </>\n\n    )\n\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}