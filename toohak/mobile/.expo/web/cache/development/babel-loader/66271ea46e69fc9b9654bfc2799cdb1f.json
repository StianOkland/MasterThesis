{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ablab/Desktop/toohak/mobile/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport io from 'socket.io-client';\nimport Automerge from 'automerge';\nimport Connection from \"./connection\";\n\nvar app = require('express')();\n\nvar http = require('http').Server(app);\n\nvar io2 = require('socket.io')(http);\n\nio.on('connection', function (socket) {\n  console.log('a user is connected');\n  var connection = new Automerge.Connection(docSet, socket);\n  socket.on('data', function (_ref) {\n    var input = _ref.input,\n        name = _ref.name;\n    var doc = docSet.getDoc(name);\n\n    if (doc) {\n      doc = Automerge.change(doc, function (doc) {\n        doc.chards = ['hei'];\n      });\n      docSet.setDoc(name, doc);\n\n      if (!(input instanceof Buffer)) {\n        input = Buffer.from(input, 'utf8');\n      }\n\n      connection.receiveData(input);\n    }\n  });\n  socket.on('add doc', function (data) {\n    var initDoc = Automerge.change(Automerge.init(), function (doc) {\n      doc.title = data, doc.cards = [];\n    });\n    docSet.setDoc(data, initDoc);\n  });\n  socket.on('delete doc', function (data) {\n    var doc = docSet.getDoc(data);\n\n    if (doc) {\n      docSet.removeDoc(data);\n      console.log('doc deleted ' + data);\n    }\n  });\n  socket.on('disconnect', function () {\n    console.log('user disconnected');\n  });\n});\nhttp.listen(3000, function () {\n  console.log('listening on *:3000');\n});\nvar docSet = new Automerge.DocSet();\ndocSet.registerHandler(function (docId, doc) {\n  console.log(\"[\" + docId + \"] \" + JSON.stringify(doc));\n});\n\nvar Item = function Item(_ref2) {\n  var item = _ref2.item,\n      onPress = _ref2.onPress,\n      style = _ref2.style;\n  React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: [styles.item, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, item[1].name));\n};\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      message: '',\n      docname: '',\n      docarray: []\n    };\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.socket = io(\"http://129.242.19.137:3000\");\n      this.connection = new Automerge.Connection(docSet, this.socket);\n      this.socket.on('data', function (_ref3) {\n        var data = _ref3.data,\n            name = _ref3.name;\n        var doc = docSet.getDoc(name);\n        doc = Automerge.change(doc, function (doc) {\n          doc.chards = ['hei'];\n        });\n        docSet.setDoc(name, doc);\n\n        _this3.connection.receiveData(data);\n      });\n      this.socket.on('close', function () {\n        console.log(\"[\" + HOST + \":\" + PORT + \"] connection closed\");\n      });\n      this.socket.on('error', function (err) {\n        console.log(\"[\" + socket.remoteAddress + \":\" + socket.remotePort + \"] error: \" + err);\n      });\n    }\n  }, {\n    key: \"submitMessage\",\n    value: function submitMessage() {\n      var doc = docSet.getDoc(this.state.docname);\n      doc = Automerge.change(doc, function (doc) {\n        doc.chards = ['hei'];\n      });\n      docSet.setDoc(this.state.docname, doc);\n      this.setState({\n        message: ''\n      });\n    }\n  }, {\n    key: \"addDoc\",\n    value: function addDoc() {\n      var _this4 = this;\n\n      console.log('doc name: ' + this.state.docname);\n      var initDoc = Automerge.change(Automerge.init(), function (doc) {\n        doc.title = _this4.state.docname, doc.cards = [];\n      });\n      docSet.setDoc(this.state.docname, initDoc);\n      this.state.docarray = Array.from(docSet.docs);\n      console.log(this.state.docarray);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(_ref4) {\n      var item = _ref4.item;\n      var backgroundColor = \"#f9c2ff\";\n      return React.createElement(Item, {\n        item: item,\n        style: {\n          backgroundColor: backgroundColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 12\n        }\n      }, \"Toohak!\"), React.createElement(View, {\n        style: {\n          marginVertical: 8,\n          borderBottomColor: '#737373',\n          borderBottomWidth: StyleSheet.hairlineWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 12\n        }\n      })), React.createElement(View, {\n        style: {\n          marginVertical: 8,\n          borderBottomColor: '#737373',\n          borderBottomWidth: StyleSheet.hairlineWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.docarray,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item[0];\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 40,\n          width: '70%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          height: 40,\n          borderWidth: 2,\n          textAlign: 'center'\n        },\n        value: this.state.docname,\n        onChangeText: function onChangeText(docname) {\n          return _this5.setState({\n            docname: docname\n          });\n        },\n        placeholder: \"Document name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          marginHorizontal: '1%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          height: 40,\n          width: '30%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return _this5.addDoc();\n        },\n        title: \"Add\",\n        color: \"#841584\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: '10%'\n  }\n});","map":{"version":3,"sources":["/home/ablab/Desktop/toohak/mobile/App.js"],"names":["React","Component","io","Automerge","Connection","app","require","http","Server","io2","on","socket","console","log","connection","docSet","input","name","doc","getDoc","change","chards","setDoc","Buffer","from","receiveData","data","initDoc","init","title","cards","removeDoc","listen","DocSet","registerHandler","docId","JSON","stringify","Item","item","onPress","style","styles","App","props","state","message","docname","docarray","HOST","PORT","err","remoteAddress","remotePort","setState","Array","docs","backgroundColor","container","flex","fontSize","marginVertical","borderBottomColor","borderBottomWidth","StyleSheet","hairlineWidth","renderItem","flexDirection","height","width","borderWidth","textAlign","marginHorizontal","addDoc","create","padding"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,UAAP;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAP,EAAZ;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAP,CAAgBE,MAAhB,CAAuBH,GAAvB,CAAb;;AACA,IAAMI,GAAG,GAAGH,OAAO,CAAC,WAAD,CAAP,CAAqBC,IAArB,CAAZ;;AAEAL,EAAE,CAACQ,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,MAAMC,UAAU,GAAG,IAAIX,SAAS,CAACC,UAAd,CAAyBW,MAAzB,EAAiCJ,MAAjC,CAAnB;AAEAA,EAAAA,MAAM,CAACD,EAAP,CAAU,MAAV,EAAkB,gBAAmB;AAAA,QAAjBM,KAAiB,QAAjBA,KAAiB;AAAA,QAAVC,IAAU,QAAVA,IAAU;AACjC,QAAIC,GAAG,GAAGH,MAAM,CAACI,MAAP,CAAcF,IAAd,CAAV;;AACA,QAAIC,GAAJ,EAAS;AACLA,MAAAA,GAAG,GAAGf,SAAS,CAACiB,MAAV,CAAiBF,GAAjB,EAAsB,UAAAA,GAAG,EAAI;AAC/BA,QAAAA,GAAG,CAACG,MAAJ,GAAa,CAAC,KAAD,CAAb;AACH,OAFK,CAAN;AAGAN,MAAAA,MAAM,CAACO,MAAP,CAAcL,IAAd,EAAoBC,GAApB;;AAEA,UAAG,EAAEF,KAAK,YAAYO,MAAnB,CAAH,EAA+B;AAC3BP,QAAAA,KAAK,GAAGO,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmB,MAAnB,CAAR;AACH;;AAEDF,MAAAA,UAAU,CAACW,WAAX,CAAuBT,KAAvB;AACH;AAEJ,GAfD;AAiBAL,EAAAA,MAAM,CAACD,EAAP,CAAU,SAAV,EAAqB,UAACgB,IAAD,EAAU;AAC3B,QAAMC,OAAO,GAAGxB,SAAS,CAACiB,MAAV,CAAiBjB,SAAS,CAACyB,IAAV,EAAjB,EAAmC,UAAAV,GAAG,EAAI;AAACA,MAAAA,GAAG,CAACW,KAAJ,GAAYH,IAAZ,EAAkBR,GAAG,CAACY,KAAJ,GAAY,EAA9B;AAAiC,KAA5E,CAAhB;AACAf,IAAAA,MAAM,CAACO,MAAP,CAAcI,IAAd,EAAoBC,OAApB;AACH,GAHD;AAKAhB,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,UAACgB,IAAD,EAAU;AAC9B,QAAIR,GAAG,GAAGH,MAAM,CAACI,MAAP,CAAcO,IAAd,CAAV;;AACA,QAAIR,GAAJ,EAAS;AACLH,MAAAA,MAAM,CAACgB,SAAP,CAAiBL,IAAjB;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBa,IAA7B;AACH;AACJ,GAND;AAQAf,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC1BE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,GAFD;AAGD,CAtCD;AAyCAN,IAAI,CAACyB,MAAL,CAAY,IAAZ,EAAkB,YAAM;AACtBpB,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,CAFD;AAKA,IAAME,MAAM,GAAG,IAAIZ,SAAS,CAAC8B,MAAd,EAAf;AAEAlB,MAAM,CAACmB,eAAP,CAAuB,UAACC,KAAD,EAAQjB,GAAR,EAAgB;AACrCN,EAAAA,OAAO,CAACC,GAAR,OAAgBsB,KAAhB,UAA0BC,IAAI,CAACC,SAAL,CAAenB,GAAf,CAA1B;AACD,CAFD;;AAOA,IAAMoB,IAAI,GAAG,SAAPA,IAAO,QAA8B;AAAA,MAA3BC,IAA2B,SAA3BA,IAA2B;AAAA,MAArBC,OAAqB,SAArBA,OAAqB;AAAA,MAAZC,KAAY,SAAZA,KAAY;AACzC,sBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAED,OAA3B;AAAoC,IAAA,KAAK,EAAE,CAACE,MAAM,CAACH,IAAR,EAAcE,KAAd,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACb,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BU,IAAI,CAAC,CAAD,CAAJ,CAAQtB,IAApC,CADF;AAID,CALD;;IAQqB0B,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+BAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAFiB;AAOlB;;;;WAGD,6BAAoB;AAAA;;AAGlB,WAAKrC,MAAL,GAAcT,EAAE,CAAC,4BAAD,CAAhB;AACA,WAAKY,UAAL,GAAkB,IAAIX,SAAS,CAACC,UAAd,CAAyBW,MAAzB,EAAiC,KAAKJ,MAAtC,CAAlB;AAEA,WAAKA,MAAL,CAAYD,EAAZ,CAAe,MAAf,EAAuB,iBAAkB;AAAA,YAAhBgB,IAAgB,SAAhBA,IAAgB;AAAA,YAAVT,IAAU,SAAVA,IAAU;AACvC,YAAIC,GAAG,GAAGH,MAAM,CAACI,MAAP,CAAcF,IAAd,CAAV;AACAC,QAAAA,GAAG,GAAGf,SAAS,CAACiB,MAAV,CAAiBF,GAAjB,EAAsB,UAAAA,GAAG,EAAI;AAC/BA,UAAAA,GAAG,CAACG,MAAJ,GAAa,CAAC,KAAD,CAAb;AACH,SAFK,CAAN;AAGAN,QAAAA,MAAM,CAACO,MAAP,CAAcL,IAAd,EAAoBC,GAApB;;AACA,QAAA,MAAI,CAACJ,UAAL,CAAgBW,WAAhB,CAA4BC,IAA5B;AACD,OAPD;AASA,WAAKf,MAAL,CAAYD,EAAZ,CAAe,OAAf,EAAwB,YAAM;AAC5BE,QAAAA,OAAO,CAACC,GAAR,OAAgBoC,IAAhB,SAAwBC,IAAxB;AACD,OAFD;AAIA,WAAKvC,MAAL,CAAYD,EAAZ,CAAe,OAAf,EAAwB,UAACyC,GAAD,EAAS;AAC/BvC,QAAAA,OAAO,CAACC,GAAR,OAAgBF,MAAM,CAACyC,aAAvB,SAAwCzC,MAAM,CAAC0C,UAA/C,iBAAqEF,GAArE;AACD,OAFD;AAGD;;;WAED,yBAAgB;AACd,UAAIjC,GAAG,GAAGH,MAAM,CAACI,MAAP,CAAc,KAAK0B,KAAL,CAAWE,OAAzB,CAAV;AACA7B,MAAAA,GAAG,GAAGf,SAAS,CAACiB,MAAV,CAAiBF,GAAjB,EAAsB,UAAAA,GAAG,EAAI;AAC/BA,QAAAA,GAAG,CAACG,MAAJ,GAAa,CAAC,KAAD,CAAb;AACH,OAFK,CAAN;AAGAN,MAAAA,MAAM,CAACO,MAAP,CAAc,KAAKuB,KAAL,CAAWE,OAAzB,EAAkC7B,GAAlC;AAIA,WAAKoC,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD;;;WAED,kBAAS;AAAA;;AACPlC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAe,KAAKgC,KAAL,CAAWE,OAAtC;AACA,UAAIpB,OAAO,GAAGxB,SAAS,CAACiB,MAAV,CAAiBjB,SAAS,CAACyB,IAAV,EAAjB,EAAmC,UAAAV,GAAG,EAAI;AAACA,QAAAA,GAAG,CAACW,KAAJ,GAAY,MAAI,CAACgB,KAAL,CAAWE,OAAvB,EAAgC7B,GAAG,CAACY,KAAJ,GAAY,EAA5C;AAA+C,OAA1F,CAAd;AACAf,MAAAA,MAAM,CAACO,MAAP,CAAc,KAAKuB,KAAL,CAAWE,OAAzB,EAAkCpB,OAAlC;AAEA,WAAKkB,KAAL,CAAWG,QAAX,GAAsBO,KAAK,CAAC/B,IAAN,CAAWT,MAAM,CAACyC,IAAlB,CAAtB;AAGA5C,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKgC,KAAL,CAAWG,QAAvB;AACD;;;WAKD,2BAAqB;AAAA,UAART,IAAQ,SAARA,IAAQ;AACnB,UAAMkB,eAAe,GAAG,SAAxB;AAEA,aACE,oBAAC,IAAD;AACA,QAAA,IAAI,EAAElB,IADN;AAGA,QAAA,KAAK,EAAE;AAAEkB,UAAAA,eAAe,EAAfA;AAAF,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOC;;;WAIH,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEf,MAAM,CAACgB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,EAEG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,cAAc,EAAE,CAAjB;AAAoBC,UAAAA,iBAAiB,EAAE,SAAvC;AAAkDC,UAAAA,iBAAiB,EAAEC,UAAU,CAACC;AAAhF,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,CADF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACJ,UAAAA,cAAc,EAAE,CAAjB;AAAoBC,UAAAA,iBAAiB,EAAE,SAAvC;AAAkDC,UAAAA,iBAAiB,EAAEC,UAAU,CAACC;AAAhF,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWG,QADnB;AAEE,QAAA,UAAU,EAAE,KAAKkB,UAFnB;AAGE,QAAA,YAAY,EAAE,sBAAA3B,IAAI;AAAA,iBAAIA,IAAI,CAAC,CAAD,CAAR;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,EAiBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC4B,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,KAAK,EAAE;AAArB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAED,UAAAA,MAAM,EAAE,EAAV;AAAcE,UAAAA,WAAW,EAAE,CAA3B;AAA8BC,UAAAA,SAAS,EAAC;AAAxC,SADT;AAEE,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWE,OAFpB;AAGE,QAAA,YAAY,EAAE,sBAAAA,OAAO;AAAA,iBAAI,MAAI,CAACO,QAAL,CAAc;AAACP,YAAAA,OAAO,EAAPA;AAAD,WAAd,CAAJ;AAAA,SAHvB;AAIE,QAAA,WAAW,EAAC,eAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACyB,UAAAA,gBAAgB,EAAE;AAAnB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEJ,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,KAAK,EAAE;AAArB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACI,MAAL,EAAN;AAAA,SADX;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,CAjBF,CADF;AAuCD;;;;EAnH8BxE,S;;SAAZ0C,G;AAsHrB,IAAMD,MAAM,GAAGsB,UAAU,CAACU,MAAX,CAAkB;AAC/BhB,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETF,IAAAA,eAAe,EAAE,MAFR;AAGTkB,IAAAA,OAAO,EAAE;AAHA;AADoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, FlatList, TouchableOpacity } from 'react-native';\nimport io from 'socket.io-client'\nimport Automerge from 'automerge';\nimport Connection from './connection'\n\nconst app = require('express')();\nconst http = require('http').Server(app);\nconst io2 = require('socket.io')(http);\n\nio.on('connection', (socket) => {\n  console.log('a user is connected');\n  \n  const connection = new Automerge.Connection(docSet, socket)\n\n  socket.on('data', ({input, name}) => {\n      let doc = docSet.getDoc(name)\n      if (doc) {\n          doc = Automerge.change(doc, doc => {\n              doc.chards = ['hei']\n          })\n          docSet.setDoc(name, doc)           \n\n          if(!(input instanceof Buffer)) {\n              input = Buffer.from(input, 'utf8')\n          }\n  \n          connection.receiveData(input)\n      }\n\n  })\n  \n  socket.on('add doc', (data) => {\n      const initDoc = Automerge.change(Automerge.init(), doc => {doc.title = data, doc.cards = []})\n      docSet.setDoc(data, initDoc)\n  })\n\n  socket.on('delete doc', (data) => {\n      let doc = docSet.getDoc(data)\n      if (doc) {\n          docSet.removeDoc(data)\n          console.log('doc deleted ' + data);\n      }\n  })\n  \n  socket.on('disconnect', () => {\n      console.log('user disconnected');\n  });\n});\n\n\nhttp.listen(3000, () => {\n  console.log('listening on *:3000');\n});\n\n\nconst docSet = new Automerge.DocSet()\n\ndocSet.registerHandler((docId, doc) => {\n  console.log(`[${docId}] ${JSON.stringify(doc)}`);\n})\n\n\n\n\nconst Item = ({ item, onPress, style }) => {\n  <TouchableOpacity onPress={onPress} style={[styles.item, style]}>\n    <Text style={styles.title}>{item[1].name}</Text>\n  </TouchableOpacity>\n\n}\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n      docname: '',\n      docarray: []\n    }\n  }\n  \n  \n  componentDidMount() {\n\n\n    this.socket = io(\"http://129.242.19.137:3000\");\n    this.connection = new Automerge.Connection(docSet, this.socket)\n \n    this.socket.on('data', ({data, name}) => {\n      let doc = docSet.getDoc(name)\n      doc = Automerge.change(doc, doc => {\n          doc.chards = ['hei']\n      })\n      docSet.setDoc(name, doc)\n      this.connection.receiveData(data)\n    })\n\n    this.socket.on('close', () => {\n      console.log(`[${HOST}:${PORT}] connection closed`)\n    })\n\n    this.socket.on('error', (err) => {\n      console.log(`[${socket.remoteAddress}:${socket.remotePort}] error: ${err}`)\n    })\n  }\n\n  submitMessage() {\n    let doc = docSet.getDoc(this.state.docname)\n    doc = Automerge.change(doc, doc => {\n        doc.chards = ['hei']\n    })\n    docSet.setDoc(this.state.docname, doc)\n\n    \n    // this.socket.emit(\"data\", {input: this.state.message, name: this.state.docname})\n    this.setState({message: ''})\n  }\n\n  addDoc() {\n    console.log('doc name: ' + this.state.docname);\n    let initDoc = Automerge.change(Automerge.init(), doc => {doc.title = this.state.docname, doc.cards = []})\n    docSet.setDoc(this.state.docname, initDoc)\n\n    this.state.docarray = Array.from(docSet.docs)\n    // console.log(docSet);\n\n    console.log(this.state.docarray);\n  }\n\n\n\n\n  renderItem({ item }) {\n    const backgroundColor = \"#f9c2ff\";\n    // console.log(item);\n    return (\n      <Item\n      item={item}\n      // onPress={() => openDoc({navigation}, item) }\n      style={{ backgroundColor }}\n      />\n      );\n    }\n    \n\n  \n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={{flex: 1}}>\n           <Text style={{fontSize: 30}}>Toohak!</Text>\n           <View style={{marginVertical: 8, borderBottomColor: '#737373', borderBottomWidth: StyleSheet.hairlineWidth}} />\n        </View>\n        <View style={{marginVertical: 8, borderBottomColor: '#737373', borderBottomWidth: StyleSheet.hairlineWidth}} />\n\n        <View >\n          <FlatList\n            data={this.state.docarray}\n            renderItem={this.renderItem}\n            keyExtractor={item => item[0]}\n            // extraData={navigation}       \n          />\n        </View>\n\n\n        <View style={{flexDirection: 'row',}}>\n          <View style={{ height: 40, width: '70%'}}>\n            <TextInput\n              style={{ height: 40, borderWidth: 2, textAlign:'center'}}\n              value={this.state.docname}\n              onChangeText={docname => this.setState({docname})}\n              placeholder='Document name'\n            />\n          </View>\n          <View style={{marginHorizontal: '1%'}} />\n          <View style={{ height: 40, width: '30%'}}>\n            <Button\n              onPress={() => this.addDoc()}\n              title=\"Add\"\n              color=\"#841584\"\n            />\n          </View>\n        </View>\n      </View>\n    );\n    \n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: '10%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}